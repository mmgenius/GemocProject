/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator;

import java.util.function.Consumer;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import stateMachine.State;
import stateMachine.StateMachine;
import stateMachine.Transition;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  public EList<State> _State;
  
  public EList<Transition> _Transition;
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    StateMachine element = ((StateMachine) _get);
    String _name = element.getName();
    final String nameMachine = ((String) _name);
    this._State = element.getState();
    this._Transition = element.getTransition();
    fsa.generateFile((("Main/" + nameMachine) + ".java"), this.init(resource, nameMachine));
    fsa.generateFile("Abstract/State.java", this.generateAbstractClassState(resource));
    fsa.generateFile("Abstract/Transition.java", this.generateAbstractClassTransition(resource));
    final Consumer<State> _function = (State _state) -> {
      String _name_1 = _state.getName();
      String _plus = ((nameMachine + "/") + _name_1);
      String _plus_1 = (_plus + ".java");
      fsa.generateFile(_plus_1, this.state(resource, _state, nameMachine));
    };
    this._State.forEach(_function);
    final Consumer<Transition> _function_1 = (Transition _transition) -> {
      String _name_1 = _transition.getName();
      String _plus = ((nameMachine + "/") + _name_1);
      String _plus_1 = (_plus + ".java");
      fsa.generateFile(_plus_1, this.transition(resource, _transition, nameMachine));
    };
    this._Transition.forEach(_function_1);
  }
  
  public CharSequence init(final Resource r, final String _nameMachine) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package Main");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class ");
    _builder.append(_nameMachine);
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.append("public static void main(String[] args) {");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}\t\t\t");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateAbstractClassState(final Resource r) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package Abstract");
    _builder.newLine();
    _builder.newLine();
    _builder.append("abstract class State {");
    _builder.newLine();
    _builder.append("   ");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("private String name; ");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("private Boolean status");
    _builder.newLine();
    _builder.append("   ");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("public String getName(){");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.append("return this.name;");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("   ");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("public void setName(String newName){");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.append("this.name = newName;");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("   ");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("public Boolean getStatus(){");
    _builder.newLine();
    _builder.append("   \t\t ");
    _builder.append("return this.status;");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("   \t\t   ");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("public void setStatus(Boolean newStatus){");
    _builder.newLine();
    _builder.append("   \t\t ");
    _builder.append("this.status = newStatus;");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("      ");
    _builder.newLine();
    _builder.append("}\t\t");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateAbstractClassTransition(final Resource r) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package Abstract");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("abstract class Transistion {");
    _builder.newLine();
    _builder.append("\t\t   ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String name; ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private State origine; ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private State target ; ");
    _builder.newLine();
    _builder.append("\t\t   ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getName(){");
    _builder.newLine();
    _builder.append("\t\t  ");
    _builder.append("return this.name;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t   ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setName(String newName){");
    _builder.newLine();
    _builder.append("\t\t   ");
    _builder.append("this.name = newName;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public State getOrigine(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.origine;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t   \t\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public State getTarget(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.target;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setOrigine(State newOrigine){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.origine = newOrigine;\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setTarget(State newTarget){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.target = newTarget;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.newLine();
    _builder.append("}\t\t");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence state(final Resource r, final State state, final String nameMachine) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    _builder.append(nameMachine);
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("class ");
    String _name = state.getName();
    _builder.append(_name);
    _builder.append(" extends State {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("   ");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("public ");
    String _name_1 = state.getName();
    _builder.append(_name_1, "   ");
    _builder.append(" (Boolean status){");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.append("this.setName(");
    String _name_2 = state.getName();
    _builder.append(_name_2, "   \t\t");
    _builder.append("); ");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t");
    _builder.append("this.setStatus(status);");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.newLine();
    _builder.append("   ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("   \t\t   \t\t   \t\t   \t\t   \t\t  \t\t   ");
    _builder.newLine();
    _builder.append("   ");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence transition(final Resource r, final Transition transition, final String nameMachine) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    _builder.append(nameMachine);
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("class ");
    String _name = transition.getName();
    _builder.append(_name);
    _builder.append(" extends Transition{");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("   ");
    _builder.append("public ");
    String _name_1 = transition.getName();
    _builder.append(_name_1, "   ");
    _builder.append(" (){");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t");
    _builder.append("this.setName(");
    String _name_2 = transition.getName();
    _builder.append(_name_2, "   \t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t");
    _builder.append("this.setOrigine(");
    State _from = transition.getFrom();
    _builder.append(_from, "   \t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t");
    _builder.append("this.setTarget(");
    State _target = transition.getTarget();
    _builder.append(_target, "   \t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("   ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void transit(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if(this.getTarget().getStatus == true){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("System.out.println(\"Vous etes deja dans l\'etat\" + this.getTarget().getName());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("else{");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.getTarget().setStatus(true);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.getOrigine().setStatus(false);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}\t");
    _builder.newLine();
    return _builder;
  }
}
