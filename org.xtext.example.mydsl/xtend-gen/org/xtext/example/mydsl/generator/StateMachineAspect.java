/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator;

import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import stateMachine.State;
import stateMachine.StateMachine;

/**
 * Tentative non fonctionnel d'utilisation de @Aspect
 * J'ai essayer d'adapter les bouts de code pris chez certains camarades mais en vain.
 */
/* @Aspect(className = StateMachine.class) */@SuppressWarnings("all")
public class StateMachineAspect {
  public State currentState;
  
  public String underProcessTrigger;
  
  public String consummedString;
  
  public void initializeFSM() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field _self is undefined"
      + "\nThe method or field _self is undefined"
      + "\nThe method or field initialState is undefined"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\ncurrentState cannot be resolved"
      + "\nstate cannot be resolved"
      + "\nfindFirst cannot be resolved"
      + "\n== cannot be resolved");
  }
  
  public void run() {
    throw new Error("Unresolved compilation problems:"
      + "\nmissing \'}\' at \';\'"
      + "\nmismatched input \'case\' expecting \'}\'"
      + "\nmismatched input \':\' expecting \'}\'"
      + "\nThe method or field _self is undefined"
      + "\nThe method or field _self is undefined"
      + "\nThe method or field _self is undefined"
      + "\nThe method or field init is undefined for the type Object"
      + "\nThe method init(boolean) is undefined"
      + "\nThe method or field init is undefined"
      + "\nThe method scan(Scanner) is undefined"
      + "\nThe method choice(Object) is undefined"
      + "\nThe method or field scan is undefined"
      + "\nThe method or field choice is undefined"
      + "\nThe method or field on is undefined"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\nThis expression is not allowed in this context, since it doesn\'t cause any side effects."
      + "\ncurrentState cannot be resolved"
      + "\n== cannot be resolved"
      + "\ncurrentState cannot be resolved"
      + "\nstate cannot be resolved"
      + "\nfindFirst cannot be resolved"
      + "\n== cannot be resolved"
      + "\nnext cannot be resolved"
      + "\nchangeState cannot be resolved");
  }
  
  private Object break_;
}
