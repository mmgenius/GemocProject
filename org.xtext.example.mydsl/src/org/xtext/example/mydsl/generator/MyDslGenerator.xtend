/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import stateMachine.StateMachine
import org.eclipse.emf.common.util.EList
import stateMachine.State
import stateMachine.Transition

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {
	
	public EList<State> _State ; 
	public EList<Transition> _Transition ; 
	 
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
		var element = resource.contents.get(0) as StateMachine;
		val nameMachine = element.name as String ;
		_State = element.getState(); 
		_Transition = element.getTransition();	
		
		fsa.generateFile('Main/' + nameMachine + '.java', resource.init(nameMachine))
		fsa.generateFile('Abstract/State.java', resource.generateAbstractClassState) 
		fsa.generateFile('Abstract/Transition.java', resource.generateAbstractClassTransition) 
						 				
		 		
		_State.forEach[ _state | fsa.generateFile(nameMachine + '/' + _state.name + '.java', resource.state(_state, nameMachine))];							
		_Transition.forEach[ _transition| fsa.generateFile(nameMachine + '/' + _transition.name + '.java', resource.transition(_transition, nameMachine))];
				
		
	}

	def init(Resource r, String _nameMachine) '''
		package Main
		
		public class «_nameMachine» {
			
		   		public static void main(String[] args) {
		   		
		   }
		}			
	'''
	def generateAbstractClassState(Resource r) '''
		package Abstract
		
		abstract class State {
		   
		   private String name; 
		   private Boolean status
		   
		   public String getName(){
		   		return this.name;
		   }
		   
		   public void setName(String newName){
		   		this.name = newName;
		   }
		   
		   public Boolean getStatus(){
		   		 return this.status;
		   		}
		   		   
		   public void setStatus(Boolean newStatus){
		   		 this.status = newStatus;
		   }
		      
		}		
	'''
	
	def generateAbstractClassTransition(Resource r) '''
		package Abstract
				
		abstract class Transistion {
				   
			private String name; 
			private State origine; 
			private State target ; 
				   
			public String getName(){
				  return this.name;
			}
				   
			public void setName(String newName){
				   this.name = newName;
			}
			
			public State getOrigine(){
				return this.origine;
			}
				   		
			public State getTarget(){
				return this.target;
			}
			
			public void setOrigine(State newOrigine){
				this.origine = newOrigine;	
			}
			
			public void setTarget(State newTarget){
				this.target = newTarget;
			}
				      
		}		
	'''
	
	
	def state(Resource r, State state, String nameMachine)'''
		package «nameMachine»
		
		class «state.name» extends State {
		
		   
		   public «state.name» (Boolean status){
		   		
		   		this.setName(«state.name»); 
		   		this.setStatus(status);
		   		
		   }
		   		   		   		   		   		  		   
		   
		}
	'''
	
	def transition(Resource r, Transition transition, String nameMachine)'''
		package «nameMachine»
		
		class «transition.name» extends Transition{
		
		   public «transition.name» (){
		   		this.setName(«transition.name»);
		   		this.setOrigine(«transition.from»);
		   		this.setTarget(«transition.target»);
		   }
			
			public void transit(){
				if(this.getTarget().getStatus == true){
					System.out.println("Vous etes deja dans l'etat" + this.getTarget().getName());
				}
				else{
					this.getTarget().setStatus(true);
					this.getOrigine().setStatus(false);
				}
			}
		}	
	'''
}
